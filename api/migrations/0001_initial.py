# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-16 03:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [

    ]

    operations = [
        migrations.CreateModel(
            name='ColorAccent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255)),
                ('value', models.CharField(default=None, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ColorPrimary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255)),
                ('value', models.CharField(default=None, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=32, unique=True)),
                ('shortName', models.CharField(blank=True, default=None, help_text='Short version of the page name', max_length=16, null=True, verbose_name='Short Name')),
                ('alias', models.SlugField(default=None, help_text='Will be used as the page URL', max_length=32, unique=True)),
                ('mainPage', models.BooleanField(default=False, verbose_name='Is the main page')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='Used to sort items in toolbar')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', imagekit.models.fields.ProcessedImageField(blank=True, default=None, null=True, upload_to='uploads/icons')),
                ('appearance', models.CharField(choices=[('text', 'Just text'), ('button', 'Like a button')], default='text', max_length=255)),
                ('openNewTab', models.BooleanField(default=True, verbose_name='Open this link in a new tab?')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Page')),
            ],
            options={
                'verbose_name': 'Page Link',
                'verbose_name_plural': 'Page Links',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullHeight', models.BooleanField(default=False)),
                ('backgroundColor', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ColorPrimary')),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', imagekit.models.fields.ProcessedImageField(blank=True, default=None, null=True, upload_to='uploads/icons')),
                ('appearance', models.CharField(choices=[('text', 'Just text'), ('button', 'Like a button')], default='text', max_length=255)),
                ('openNewTab', models.BooleanField(default=True, verbose_name='Open this link in a new tab?')),
                ('name', models.CharField(default='', max_length=255)),
                ('url', models.URLField()),
            ],
            options={
                'verbose_name': 'Social Link',
                'verbose_name_plural': 'Social Links',
            },
        ),
        migrations.CreateModel(
            name='Toolbar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, help_text='Only visible to you. Use it to manage yours toolbars', max_length=255, null=True)),
                ('showPageName', models.BooleanField(default=True)),
                ('icon', imagekit.models.fields.ProcessedImageField(default=None, help_text='The icon should be a square image', null=True, upload_to='uploads/icons')),
            ],
            options={
                'verbose_name': 'Toolbar',
                'verbose_name_plural': 'Toolbars',
            },
        ),
        migrations.CreateModel(
            name='ToolbarLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', imagekit.models.fields.ProcessedImageField(blank=True, default=None, null=True, upload_to='uploads/icons')),
                ('appearance', models.CharField(choices=[('text', 'Just text'), ('button', 'Like a button')], default='text', max_length=255)),
                ('openNewTab', models.BooleanField(default=True, verbose_name='Open this link in a new tab?')),
                ('name', models.CharField(default='', max_length=32)),
                ('shortName', models.CharField(default='', help_text='Short version of the name', max_length=16, null=True)),
                ('url', models.URLField()),
                ('toolbar', models.ManyToManyField(related_name='links', to='api.Toolbar')),
            ],
            options={
                'verbose_name': 'Toolbar Link',
                'verbose_name_plural': 'Toolbar Links',
            },
        ),
        migrations.AddField(
            model_name='page',
            name='toolbar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Toolbar'),
        ),
    ]
